(()=>{"use strict";var e={150:(e,t,r)=>{r.d(t,{Z:()=>o});var n=r(537),a=r.n(n),i=r(645),s=r.n(i)()(a());s.push([e.id,"body{\r\n    background-color: antiquewhite;\r\n    align-items: center;\r\n    margin: 0%;\r\n    padding: 0%;\r\n}\r\n.game-container{\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 5px;\r\n}\r\n.board-container{\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    width: 60vw;\r\n    border: 1px solid black;\r\n}\r\n.board-container .element{\r\n    display: flex;\r\n    width: 15vw;\r\n    height: 15vh;\r\n    background-color: gainsboro;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin: 2%;\r\n    border: 1px solid green;\r\n}\r\n.game-info{\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n}\r\n.game-info a{\r\n    text-decoration: none;\r\n    color: black;\r\n    margin-right: 5vw;\r\n}\r\n.game-info span{\r\n    margin-right: 5vw;\r\n}\r\n\r\n.board-history{\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    width: 6vw;\r\n}\r\n.board-history span{\r\n    width: 100%;\r\n}\r\n.board-history .element{\r\n    display: flex;\r\n    width: 1.5vw;\r\n    height: 1.5vh;\r\n    background-color: gainsboro;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin: 2%;\r\n}\r\n.history{\r\n    width: 20%;\r\n    height: 250px;\r\n    font-size: 10px;\r\n    margin: 5px;\r\n    overflow-y: auto;\r\n}\r\n.comment-section{\r\n    margin: 2%;\r\n    width: 100%;\r\n}\r\n.comment-section div{\r\n    margin: 2%;\r\n}\r\ntextarea{\r\n    width: 100%;\r\n}\r\n.comment{\r\n    display: none;\r\n}","",{version:3,sources:["webpack://./src/main.css"],names:[],mappings:"AAAA;IACI,8BAA8B;IAC9B,mBAAmB;IACnB,UAAU;IACV,WAAW;AACf;AACA;IACI,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,mBAAmB;IACnB,YAAY;AAChB;AACA;IACI,aAAa;IACb,eAAe;IACf,WAAW;IACX,uBAAuB;AAC3B;AACA;IACI,aAAa;IACb,WAAW;IACX,YAAY;IACZ,2BAA2B;IAC3B,mBAAmB;IACnB,uBAAuB;IACvB,UAAU;IACV,uBAAuB;AAC3B;AACA;IACI,aAAa;IACb,mBAAmB;IACnB,uBAAuB;AAC3B;AACA;IACI,qBAAqB;IACrB,YAAY;IACZ,iBAAiB;AACrB;AACA;IACI,iBAAiB;AACrB;;AAEA;IACI,aAAa;IACb,eAAe;IACf,UAAU;AACd;AACA;IACI,WAAW;AACf;AACA;IACI,aAAa;IACb,YAAY;IACZ,aAAa;IACb,2BAA2B;IAC3B,mBAAmB;IACnB,uBAAuB;IACvB,UAAU;AACd;AACA;IACI,UAAU;IACV,aAAa;IACb,eAAe;IACf,WAAW;IACX,gBAAgB;AACpB;AACA;IACI,UAAU;IACV,WAAW;AACf;AACA;IACI,UAAU;AACd;AACA;IACI,WAAW;AACf;AACA;IACI,aAAa;AACjB",sourcesContent:["body{\r\n    background-color: antiquewhite;\r\n    align-items: center;\r\n    margin: 0%;\r\n    padding: 0%;\r\n}\r\n.game-container{\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 5px;\r\n}\r\n.board-container{\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    width: 60vw;\r\n    border: 1px solid black;\r\n}\r\n.board-container .element{\r\n    display: flex;\r\n    width: 15vw;\r\n    height: 15vh;\r\n    background-color: gainsboro;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin: 2%;\r\n    border: 1px solid green;\r\n}\r\n.game-info{\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n}\r\n.game-info a{\r\n    text-decoration: none;\r\n    color: black;\r\n    margin-right: 5vw;\r\n}\r\n.game-info span{\r\n    margin-right: 5vw;\r\n}\r\n\r\n.board-history{\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    width: 6vw;\r\n}\r\n.board-history span{\r\n    width: 100%;\r\n}\r\n.board-history .element{\r\n    display: flex;\r\n    width: 1.5vw;\r\n    height: 1.5vh;\r\n    background-color: gainsboro;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin: 2%;\r\n}\r\n.history{\r\n    width: 20%;\r\n    height: 250px;\r\n    font-size: 10px;\r\n    margin: 5px;\r\n    overflow-y: auto;\r\n}\r\n.comment-section{\r\n    margin: 2%;\r\n    width: 100%;\r\n}\r\n.comment-section div{\r\n    margin: 2%;\r\n}\r\ntextarea{\r\n    width: 100%;\r\n}\r\n.comment{\r\n    display: none;\r\n}"],sourceRoot:""}]);const o=s},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var r="",n=void 0!==t[5];return t[4]&&(r+="@supports (".concat(t[4],") {")),t[2]&&(r+="@media ".concat(t[2]," {")),n&&(r+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),r+=e(t),n&&(r+="}"),t[2]&&(r+="}"),t[4]&&(r+="}"),r})).join("")},t.i=function(e,r,n,a,i){"string"==typeof e&&(e=[[null,e,void 0]]);var s={};if(n)for(var o=0;o<this.length;o++){var c=this[o][0];null!=c&&(s[c]=!0)}for(var l=0;l<e.length;l++){var A=[].concat(e[l]);n&&s[A[0]]||(void 0!==i&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=i),r&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=r):A[2]=r),a&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=a):A[4]="".concat(a)),t.push(A))}},t}},537:e=>{e.exports=function(e){var t=e[1],r=e[3];if(!r)return t;if("function"==typeof btoa){var n=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(n),i="/*# ".concat(a," */"),s=r.sources.map((function(e){return"/*# sourceURL=".concat(r.sourceRoot||"").concat(e," */")}));return[t].concat(s).concat([i]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function r(e){for(var r=-1,n=0;n<t.length;n++)if(t[n].identifier===e){r=n;break}return r}function n(e,n){for(var i={},s=[],o=0;o<e.length;o++){var c=e[o],l=n.base?c[0]+n.base:c[0],A=i[l]||0,m="".concat(l," ").concat(A);i[l]=A+1;var h=r(m),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==h)t[h].references++,t[h].updater(u);else{var d=a(u,n);n.byIndex=o,t.splice(o,0,{identifier:m,updater:d,references:1})}s.push(m)}return s}function a(e,t){var r=t.domAPI(t);return r.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;r.update(e=t)}else r.remove()}}e.exports=function(e,a){var i=n(e=e||[],a=a||{});return function(e){e=e||[];for(var s=0;s<i.length;s++){var o=r(i[s]);t[o].references--}for(var c=n(e,a),l=0;l<i.length;l++){var A=r(i[l]);0===t[A].references&&(t[A].updater(),t.splice(A,1))}i=c}}},569:e=>{var t={};e.exports=function(e,r){var n=function(e){if(void 0===t[e]){var r=document.querySelector(e);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(e){r=null}t[e]=r}return t[e]}(e);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");n.appendChild(r)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,r)=>{e.exports=function(e){var t=r.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(r){!function(e,t,r){var n="";r.supports&&(n+="@supports (".concat(r.supports,") {")),r.media&&(n+="@media ".concat(r.media," {"));var a=void 0!==r.layer;a&&(n+="@layer".concat(r.layer.length>0?" ".concat(r.layer):""," {")),n+=r.css,a&&(n+="}"),r.media&&(n+="}"),r.supports&&(n+="}");var i=r.sourceMap;i&&"undefined"!=typeof btoa&&(n+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(n,e,t.options)}(t,e,r)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function r(n){var a=t[n];if(void 0!==a)return a.exports;var i=t[n]={id:n,exports:{}};return e[n](i,i.exports,r),i.exports}r.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return r.d(t,{a:t}),t},r.d=(e,t)=>{for(var n in t)r.o(t,n)&&!r.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r.nc=void 0,(()=>{var e=r(379),t=r.n(e),n=r(795),a=r.n(n),i=r(569),s=r.n(i),o=r(565),c=r.n(o),l=r(216),A=r.n(l),m=r(589),h=r.n(m),u=r(150),d={};d.styleTagTransform=h(),d.setAttributes=c(),d.insert=s().bind(null,"head"),d.domAPI=a(),d.insertStyleElement=A(),t()(u.Z,d),u.Z&&u.Z.locals&&u.Z.locals;class p{tick_o="O";tick_x="X";_win_combo=["123","456","789","147","258","369","357","159"];boxes=[];status="";comments=[];current_player=this.tick_o;addComment(e){this.comments.push(e)}}class b{historyObject;currentGameObject;games;storage;constructor(e){this.storage=e,e.history&&(this.historyObject=JSON.parse(e.history)),e["current-game"]&&(this.currentGameObject=JSON.parse(e["current-game"])),this.getGames()}removeCurrentGame(){this.storage["current-game"]&&delete this.storage["current-game"],this.currentGameObject=null}clearGameHistory(){this.storage.clear(),this.historyObject=this.currentGameObject=null,this.getGames()}setData(e,t){this.storage[e]=t,"history"==e?(this.historyObject=JSON.parse(t),this.getGames()):this.currentGameObject=JSON.parse(t)}getGamebyIndex(e){let t=new p;if(null!=this.historyObject&&e>=0&&this.historyObject.length>e-1){let r=this.historyObject[e-1].boxes.split(",");r.slice(0,1),t.boxes=r,t.status=this.historyObject[e-1].stat}else if(null!=this.currentGameObject){let e=this.currentGameObject.boxes.split(",");e.slice(0,1),t.boxes=e,t.status=this.currentGameObject.stat}return t}getGames(){let e=[];null!=this.historyObject?(this.historyObject.forEach((t=>{let r=new p,n=t.boxes.split(",");n.slice(0,1),r.boxes=n,r.status=t.stat,e.push(r)})),this.games=e):this.games=[]}setGameData(e,t){let r={current_player:e.currentPlayer,boxes:e.boxes.toString(),stat:e.status,comments:e.comments};this.historyObject&&"history"==t?(this.historyObject.push(r),this.setData(t,JSON.stringify(this.historyObject))):"history"==t?(this.historyObject=[r],this.setData(t,JSON.stringify([r]))):(this.currentGameObject=r,this.setData(t,JSON.stringify(r)))}}var g=new class{gameObject;hiddenBox;storageObject;constructor(e){this.gameObject=e||new p,this.storageObject=new b(localStorage)}playerWinCondition(){let e=!1;return _.map(this.gameObject._win_combo,function(t){this.gameObject.boxes[t[0]]===this.gameObject.current_player&&this.gameObject.boxes[t[1]]===this.gameObject.current_player&&this.gameObject.boxes[t[2]]===this.gameObject.current_player&&(e=!0)}.bind(this)),e}drawCondition(){let e=0;return _.map(this.gameObject.boxes,(function(t){null!=t&&null!=t&&""!=t&&e++})),9==e}divClickOff(e){$(e).off("click")}divClicked(e){const t=e.target.id;if(!this.gameObject.boxes[t]){if(this.gameObject.boxes[t]=e.target.innerHTML=this.gameObject.current_player,this.playerWinCondition.bind(this)())return $("#Status")[0].innerHTML=this.gameObject.status=this.gameObject.current_player+" won",_.map(this.hiddenBox,this.divClickOff),this.storageObject.setGameData(this.gameObject,"history"),void this.storageObject.removeCurrentGame();if(this.drawCondition.bind(this)())return $("#Status")[0].innerHTML=this.gameObject.status="Draw",this.storageObject.setGameData(this.gameObject,"history"),void this.storageObject.removeCurrentGame();this.gameObject.current_player=this.gameObject.current_player==this.gameObject.tick_o?this.gameObject.tick_x:this.gameObject.tick_o,this.storageObject.setGameData(this.gameObject,"current-game")}}divClick(e){null!=e.innerHTML&&""!=e.innerHTML||$(e).on("click",this.divClicked.bind(this))}load(){this.hiddenBox=$(".board-container .element"),_.map(this.hiddenBox,this.divClick.bind(this))}restartGame(){this.gameObject=new p,Object.values(this.hiddenBox).forEach(((e,t)=>{t<9&&(e.innerHTML=null)})),$("#Status")[0].innerHTML=null,this.storageObject.removeCurrentGame(),window.location.href="main.html",this.load()}clearHistory(){this.storageObject.clearGameHistory(),$(".history")[0].innerHTML=null}create_board(e){let t=$('<div class="board-history" id="history'+(e+1)+'"></div>');t.append('<span><p id="Status'+(e+1)+'"></p></span>'),t.append('<span><a href="#Game'+(e+1)+'"></span>');for(let e=1;e<10;e++)t.append('<div class="element" id="'+e+'"></div>');$(".history").append(t)}displayGame(e,t,r){arguments.length||(e=this.gameObject,t=$(".board-container .element"),r=$("#Status")[0]),Object.values(t).forEach(((t,r)=>{r<9&&(null==e.boxes[r+1]||""==e.boxes[r+1]?t.innerHTML=null:t.innerHTML=e.boxes[r+1])})),r.innerHTML=e.status}displayAllGames(){this.storageObject.games.forEach(((e,t)=>{0==$("#Status"+(t+1)).length&&this.create_board(t),this.displayGame(e,$("#history"+(t+1)+" .element"),$("#Status"+(t+1))[0])}))}};$(document).ready((function(){$("#clearHistory").on("click",(()=>{g.clearHistory()})),$("#history").on("click",(()=>{g.displayAllGames()})),$("#restartGame").on("click",(()=>{g.restartGame()})),$(".comment-link").on("click",(()=>{$(".comment-link").hide(),$(".comment .username").prop("required",!0),$(".comment .desc").prop("required",!0),$(".comment").show()})),$("form").on("submit",(function(e){comments.push({name:e.target[0].value,comment:e.target[1].value,time:(new Date).toLocaleString()}),e.preventDefault(),$("form")[0].reset(),$(".comment-link").show(),$(".comment").hide()}));let e=parseInt(location.hash.replace("#Game",""));g.gameObject=e?g.storageObject.getGamebyIndex(e):g.storageObject.getGamebyIndex(-1),g.displayGame(),g.load()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,